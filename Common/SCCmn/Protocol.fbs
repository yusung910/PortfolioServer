////////////////////////////////////////////////////////////////////////////////
//z
// IDL 작성 시
//
// 1. Prefix					Example
// C 	- Client
// S 	- Server(GameServer)	CS, SC, SL
// E	- Server(GameServer)	SE, EGDB, ES, EL
// L 	- LoginServer
// M 	- MessengerServer		CM, MC
// Log 	- LogServer				SLog, LLog, BLog
// U	- UnityServer			SU, US
//
// UDB 	- UserDB				SUDB
// GDB 	- GameDB
// LDB 	- LogDB
// WDB 	- WorldDB (구 UnityDB )
// (*플랫버퍼 IDL을 이용하지 않더라도 같은 규칙임)
// 
// 2. Suffix
// Req				- 요청
// Res				- 요청에 의한 응답 (Request 패킷은 반드시 Response가 있다)
// Noti				- 알림
// Broadcast		- 전체 알림 류
//
// 3. Member Structure는 접두사 M 을 붙인다.
//
// *Example
// table SCAuthResponse		<-- 접두사 Client -> Server, 접미사 Response로 요청에 의한 응답임
// {
//   HeroInfoList:[MHeroInfo];
//   HeroSlotCount:int;
//
//   messageid:EPacketProtocol = SC_AuthResponse;		<-- 전송 패킷은 마지막에 messageid 프로토콜을 넣는다.
// }														마지막에 넣는 이유는 오버로딩으로 안써도 되기 때문..
//
// table MHeroInfo			- Member Structure 는 접두사 M 을 붙인다.
//
// ※ 슬래시 3개이상 쓴뒤 뒤에 한글이 있으면 안됨 (빌드오류나옴)
//
// * 작성 시 FieldName은 소문자로 작성. 그 외에 warning 발생
///////////////////////////////////////////////////////////////////////////////
//  Start Protocols
///////////////////////////////////////////////////////////////////////////////
enum EPacketProtocol:int
{
	None = 0,
	Host_Connect,
	Host_Close,
	Host_ConnectFailed,

	// 기존 대역 10 ~
	Host_Hello = 12,


	// ~999
	SC_IntegrationErrorNotification = 10000,
	//---------------------------------------------------------------------------
	//GameServer
	//---------------------------------------------------------------------------
	CS_AuthReq,
	SC_AuthRes,

	PacketMax
}



///////////////////////////////////////////////////////////////////////////////
//  end Protocols
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
//  Begin Error
///////////////////////////////////////////////////////////////////////////////
enum EErrorMsg:int
{
	EF_NONE														= 0,

	//공통 사용 영역
	EF_HOST_IP_IS_NOT_ALLOWED									= 11,
	EF_DUPLICATE_CONNECTION_NET_ALLOWED							= 12,

	// Login Server
	//인증오류
	EF_LOGIN_PF_ERROR											= 101,
}

///////////////////////////////////////////////////////////////////////////////
//  End Errors
///////////////////////////////////////////////////////////////////////////////

table HostConnect
{
    peerip:string;
    peerport:int;

    servertype:int;
    serverid:int = 0;
    messageid:EPacketProtocol = Host_Connect;
}

table HostClose
{
	messageid:EPacketProtocol = Host_Close;
}

table HostConnectFailed
{
	messageid:EPacketProtocol = Host_ConnectFailed;
}

table HostHello
{
	servertype:int;
	serverid:int;
	name:string;
	buildtype:int;

	messageid:EPacketProtocol = Host_Hello;
}


table SCIntegrationErrorNotification
{
    SrcMsgID:int;
	Error:int;
	messageid:EPacketProtocol = SC_IntegrationErrorNotification;
}


//------------------------------------------------------
//GameServer Table
//------------------------------------------------------
table CSAuthReq
{
	accountid: string;
	accountpw: string;
    hostid: int;
	messageid:EPacketProtocol = CS_AuthReq;
}

table SCAuthRes
{
	accountid: string;
	accountpw: string;
	messageid:EPacketProtocol = SC_AuthRes;
}