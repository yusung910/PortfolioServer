<?xml version="1.0"?>
<doc>
    <assembly>
        <name>K4os.Compression.LZ4.Legacy</name>
    </assembly>
    <members>
        <member name="M:K4os.Compression.LZ4.Legacy.Extensions.AssertIsNotNull``1(``0,System.String)">
            <summary>
            Asserts that given argument is not null. As it is designed to be used only in
            situations when we 100% ure that value is not null, it actually does anything
            only in DEBUG builds and has no effect in RELEASE. Mostly used to ensure
            static analysis tools that we know what we are doing.
            </summary>
            <param name="value">Argument value.</param>
            <param name="name">Name of argument.</param>
            <typeparam name="T">Type of argument.</typeparam>
        </member>
        <member name="T:K4os.Compression.LZ4.Legacy.LZ4Legacy">
            <summary>
            Utility class with factory methods to create legacy LZ4 (lz4net) compression and decompression streams.
            </summary>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Legacy.Encode(System.IO.Stream,System.Boolean,System.Int32,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:K4os.Compression.LZ4.Legacy.LZ4Stream" /> class.</summary>
            <param name="innerStream">The inner stream.</param>
            <param name="highCompression"><c>true</c> if high compression should be used,
            <c>false</c> otherwise.</param>
            <param name="blockSize">Size of the block.</param>
            <param name="leaveOpen">Indicates if inner stream should be left open after compression.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Legacy.Decode(System.IO.Stream,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:K4os.Compression.LZ4.Legacy.LZ4Stream" /> class.</summary>
            <param name="innerStream">The inner stream.</param>
            <param name="leaveOpen">Indicates if inner stream should be left open after decompression.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Legacy.Wrap(System.Byte[],System.Int32,System.Int32)">
            <summary>Compresses and wraps given input byte buffer.</summary>
            <param name="inputBuffer">The input buffer.</param>
            <param name="inputOffset">The input offset.</param>
            <param name="inputLength">Length of the input.</param>
            <returns>Compressed buffer.</returns>
            <exception cref="T:System.ArgumentException">inputBuffer size of inputLength is invalid</exception>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Legacy.WrapHC(System.Byte[],System.Int32,System.Int32)">
            <summary>Compresses (with high compression algorithm) and wraps given input byte buffer.</summary>
            <param name="inputBuffer">The input buffer.</param>
            <param name="inputOffset">The input offset.</param>
            <param name="inputLength">Length of the input.</param>
            <returns>Compressed buffer.</returns>
            <exception cref="T:System.ArgumentException">inputBuffer size of inputLength is invalid</exception>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Legacy.Unwrap(System.Byte[],System.Int32)">
            <summary>Unwraps the specified compressed buffer.</summary>
            <param name="inputBuffer">The input buffer.</param>
            <param name="inputOffset">The input offset.</param>
            <returns>Uncompressed buffer.</returns>
            <exception cref="T:System.ArgumentException">
                inputBuffer size is invalid or inputBuffer size is invalid or has been corrupted
            </exception>
        </member>
        <member name="T:K4os.Compression.LZ4.Legacy.LZ4Stream">
            <summary>Block compression stream. Allows to use LZ4 for stream compression.</summary>
        </member>
        <member name="T:K4os.Compression.LZ4.Legacy.LZ4Stream.ChunkFlags">
            <summary>
            Flags of a chunk. Please note, this 
            </summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream.ChunkFlags.None">
            <summary>None.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream.ChunkFlags.Compressed">
            <summary>Set if chunk is compressed.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream.ChunkFlags.HighCompression">
            <summary>Set if high compression has been selected (does not affect decoder, 
            but might be useful when rewriting)</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream.ChunkFlags.Passes">
            <summary>3 bits for number of passes. Currently only 1 pass (value 0) 
            is supported.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._innerStream">
            <summary>The inner stream.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._compressionMode">
            <summary>The compression mode.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._highCompression">
            <summary>The high compression flag (compression only).</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._interactiveRead">
            <summary>Determines if reading tries to return something ASAP or wait 
            for full chunk (decompression only).</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._isolateInnerStream">
            <summary>Isolates inner stream which will not be closed 
            when this stream is closed.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._blockSize">
            <summary>The block size (compression only).</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._buffer">
            <summary>The buffer.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._bufferLength">
            <summary>The buffer length (can be different then _buffer.Length).</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4Stream._bufferOffset">
            <summary>The offset in a buffer.</summary>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.#ctor(System.IO.Stream,K4os.Compression.LZ4.Legacy.LZ4StreamMode,System.Boolean,System.Int32,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:K4os.Compression.LZ4.Legacy.LZ4Stream" /> class.</summary>
            <param name="innerStream">The inner stream.</param>
            <param name="compressionMode">The compression mode.</param>
            <param name="highCompression">if set to <c>true</c> high compression is used.</param>
            <param name="blockSize">Size of the block.</param>
            <param name="interactiveRead">if set to <c>true</c> interactive read mode is used. 
            It means that <see cref="M:K4os.Compression.LZ4.Legacy.LZ4Stream.Read(System.Byte[],System.Int32,System.Int32)"/> method tries to return data as soon as possible. 
            Please note, that this should be default behavior but has been made optional for 
            backward compatibility. This constructor will be changed in next major release.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.#ctor(System.IO.Stream,K4os.Compression.LZ4.Legacy.LZ4StreamMode,K4os.Compression.LZ4.Legacy.LZ4StreamFlags,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:K4os.Compression.LZ4.Legacy.LZ4Stream" /> class.</summary>
            <param name="innerStream">The inner stream.</param>
            <param name="compressionMode">The compression mode.</param>
            <param name="compressionFlags">The compression flags.</param>
            <param name="blockSize">Size of the block.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.NotSupported(System.String)">
            <summary>Returns NotSupportedException.</summary>
            <param name="operationName">Name of the operation.</param>
            <returns>NotSupportedException</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.EndOfStream">
            <summary>Returns EndOfStreamException.</summary>
            <returns>EndOfStreamException</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.TryReadVarInt(System.UInt64@)">
            <summary>Tries to read variable length int.</summary>
            <param name="result">The result.</param>
            <returns><c>true</c> if integer has been read, <c>false</c> if end of stream has been
            encountered. If end of stream has been encountered in the middle of value 
            <see cref="T:System.IO.EndOfStreamException"/> is thrown.</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.ReadVarInt">
            <summary>Reads the variable length int. Work with assumption that value is in the stream
            and throws exception if it isn't. If you want to check if value is in the stream
            use <see cref="M:K4os.Compression.LZ4.Legacy.LZ4Stream.TryReadVarInt(System.UInt64@)"/> instead.</summary>
            <returns></returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.ReadBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>Reads the block of bytes. 
            Contrary to <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)"/> does not read partial data if possible. 
            If there is no data (yet) it waits.</summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <returns>Number of bytes read.</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.WriteVarInt(System.UInt64)">
            <summary>Writes the variable length integer.</summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.FlushCurrentChunk">
            <summary>Flushes current chunk.</summary>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.AcquireNextChunk">
            <summary>Reads the next chunk from stream.</summary>
            <returns><c>true</c> if next has been read, or <c>false</c> if it is legitimate end of file.
            Throws <see cref="T:System.IO.EndOfStreamException"/> if end of stream was unexpected.</returns>
        </member>
        <member name="P:K4os.Compression.LZ4.Legacy.LZ4Stream.CanRead">
            <summary>When overridden in a derived class, gets a value indicating whether the current stream supports reading.</summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:K4os.Compression.LZ4.Legacy.LZ4Stream.CanSeek">
            <summary>When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:K4os.Compression.LZ4.Legacy.LZ4Stream.CanWrite">
            <summary>When overridden in a derived class, gets a value indicating whether the current stream supports writing.</summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.Flush">
            <summary>When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</summary>
        </member>
        <member name="P:K4os.Compression.LZ4.Legacy.LZ4Stream.Length">
            <summary>When overridden in a derived class, gets the length in bytes of the stream.</summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
        </member>
        <member name="P:K4os.Compression.LZ4.Legacy.LZ4Stream.Position">
            <summary>When overridden in a derived class, gets or sets the position within the current stream.</summary>
            <returns>The current position within the stream.</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.ReadByte">
            <summary>Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>When overridden in a derived class, sets the position within the current stream.</summary>
            <param name="offset">A byte offset relative to the <paramref name="origin" /> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.SetLength(System.Int64)">
            <summary>When overridden in a derived class, sets the length of the current stream.</summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.WriteByte(System.Byte)">
            <summary>Writes a byte to the current position in the stream and advances the position within the stream by one byte.</summary>
            <param name="value">The byte to write to the stream.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Stream.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:K4os.Compression.LZ4.Legacy.LZ4StreamFlags">
            <summary>
            Additional flags for LZ4Stream.
            </summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4StreamFlags.None">
            <summary>Empty settings. No special behavior.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4StreamFlags.InteractiveRead">
            <summary>Allows to use interactive mode, possibly returning partial blocks.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4StreamFlags.HighCompression">
            <summary>Uses high compression version of algorithm.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4StreamFlags.IsolateInnerStream">
            <summary>Isolates inner stream so it does not get 
            closed when LZ4 stream is closed.</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4StreamFlags.Default">
            <summary>Default settings.</summary>
        </member>
        <member name="T:K4os.Compression.LZ4.Legacy.LZ4StreamMode">
            <summary>
            Originally this type comes from System.IO.Compression, 
            but it is not present in portable assemblies.
            </summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4StreamMode.Compress">
            <summary>Compress</summary>
        </member>
        <member name="F:K4os.Compression.LZ4.Legacy.LZ4StreamMode.Decompress">
            <summary>Decompress</summary>
        </member>
        <member name="T:K4os.Compression.LZ4.Legacy.LZ4Wrapper">
            <summary>
            Legacy pickler for LZ4. Do not use unless you have dependency on some old data.
            </summary>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Wrapper.Poke32(System.Byte[],System.Int32,System.UInt32)">
            <summary>Sets uint32 value in byte buffer.</summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Wrapper.Peek32(System.Byte[],System.Int32)">
            <summary>Gets uint32 from byte buffer.</summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Wrapper.Wrap(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>Compresses and wraps given input byte buffer.</summary>
            <param name="inputBuffer">The input buffer.</param>
            <param name="inputOffset">The input offset.</param>
            <param name="inputLength">Length of the input.</param>
            <param name="highCompression">if set to <c>true</c> uses high compression.</param>
            <returns>Compressed buffer.</returns>
            <exception cref="T:System.ArgumentException">inputBuffer size of inputLength is invalid</exception>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Wrapper.Wrap(System.Byte[],System.Int32,System.Int32)">
            <summary>Compresses and wraps given input byte buffer.</summary>
            <param name="inputBuffer">The input buffer.</param>
            <param name="inputOffset">The input offset.</param>
            <param name="inputLength">Length of the input.</param>
            <returns>Compressed buffer.</returns>
            <exception cref="T:System.ArgumentException">inputBuffer size of inputLength is invalid</exception>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Wrapper.WrapHC(System.Byte[],System.Int32,System.Int32)">
            <summary>Compresses (with high compression algorithm) and wraps given input byte buffer.</summary>
            <param name="inputBuffer">The input buffer.</param>
            <param name="inputOffset">The input offset.</param>
            <param name="inputLength">Length of the input.</param>
            <returns>Compressed buffer.</returns>
            <exception cref="T:System.ArgumentException">inputBuffer size of inputLength is invalid</exception>
        </member>
        <member name="M:K4os.Compression.LZ4.Legacy.LZ4Wrapper.Unwrap(System.Byte[],System.Int32)">
            <summary>Unwraps the specified compressed buffer.</summary>
            <param name="inputBuffer">The input buffer.</param>
            <param name="inputOffset">The input offset.</param>
            <returns>Uncompressed buffer.</returns>
            <exception cref="T:System.ArgumentException">
                inputBuffer size is invalid or inputBuffer size is invalid or has been corrupted
            </exception>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute">
            <summary>
            Specifies that this constructor sets all required members for the current type,
            and callers do not need to set any required members themselves.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>
            Specifies the syntax used in a string.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.
            </summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnscopedRefAttribute">
            <summary>
            Used to indicate a byref escapes and is not scoped.
            </summary>
            <remarks>
            <para>
            There are several cases where the C# compiler treats a <see langword="ref"/> as implicitly
            <see langword="scoped"/> - where the compiler does not allow the <see langword="ref"/> to escape the method.
            </para>
            <para>
            For example:
            <list type="number">
                <item><see langword="this"/> for <see langword="struct"/> instance methods.</item>
                <item><see langword="ref"/> parameters that refer to <see langword="ref"/> <see langword="struct"/> types.</item>
                <item><see langword="out"/> parameters.</item>
            </list>
            </para>
            <para>
            This attribute is used in those instances where the <see langword="ref"/> should be allowed to escape.
            </para>
            <para>
            Applying this attribute, in any form, has impact on consumers of the applicable API. It is necessary for
            API authors to understand the lifetime implications of applying this attribute and how it may impact their users.
            </para>
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute">
            <summary>
            Indicates that compiler support for a particular feature is required for the location where this attribute is applied.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute"/> type.
            </summary>
            <param name="featureName">The name of the feature to indicate.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName">
            <summary>
            The name of the compiler feature.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.IsOptional">
            <summary>
            If true, the compiler can choose to allow access to the location where this attribute is applied if it does not understand <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RefStructs">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the ref structs C# feature.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RequiredMembers">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the required members C# feature.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute">
            <summary>
            Indicates which arguments to a method involving an interpolated string handler should be passed to that handler.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="argument">The name of the argument that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="arguments">The names of the arguments that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.Arguments">
            <summary>
            Gets the names of the arguments that should be passed to the handler.
            </summary>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute">
            <summary>
            Indicates the attributed type is to be used as an interpolated string handler.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiredMemberAttribute">
            <summary>
            Specifies that a type has required members or that a member is required.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class with the specified message.
            </summary>
            <param name="message">An optional message associated with this attribute instance.</param>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Message">
            <summary>
            Returns the optional message associated with this attribute instance.
            </summary>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Url">
            <summary>
            Returns the optional URL associated with this attribute instance.
            </summary>
        </member>
    </members>
</doc>
