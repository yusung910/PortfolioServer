// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct SCEnterGameAck : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SCEnterGameAck GetRootAsSCEnterGameAck(ByteBuffer _bb) { return GetRootAsSCEnterGameAck(_bb, new SCEnterGameAck()); }
  public static SCEnterGameAck GetRootAsSCEnterGameAck(ByteBuffer _bb, SCEnterGameAck obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SCEnterGameAck __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string AccountID { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAccountIDBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetAccountIDBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetAccountIDArray() { return __p.__vector_as_array<byte>(4); }
  public string AccountPW { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAccountPWBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetAccountPWBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetAccountPWArray() { return __p.__vector_as_array<byte>(6); }
  public EPacketProtocol Messageid { get { int o = __p.__offset(8); return o != 0 ? (EPacketProtocol)__p.bb.GetInt(o + __p.bb_pos) : EPacketProtocol.SC_EnterGameAck; } }

  public static Offset<SCEnterGameAck> CreateSCEnterGameAck(FlatBufferBuilder builder,
      StringOffset AccountIDOffset = default(StringOffset),
      StringOffset AccountPWOffset = default(StringOffset),
      EPacketProtocol messageid = EPacketProtocol.SC_EnterGameAck) {
    builder.StartTable(3);
    SCEnterGameAck.AddMessageid(builder, messageid);
    SCEnterGameAck.AddAccountPW(builder, AccountPWOffset);
    SCEnterGameAck.AddAccountID(builder, AccountIDOffset);
    return SCEnterGameAck.EndSCEnterGameAck(builder);
  }

  public static void StartSCEnterGameAck(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddAccountID(FlatBufferBuilder builder, StringOffset AccountIDOffset) { builder.AddOffset(0, AccountIDOffset.Value, 0); }
  public static void AddAccountPW(FlatBufferBuilder builder, StringOffset AccountPWOffset) { builder.AddOffset(1, AccountPWOffset.Value, 0); }
  public static void AddMessageid(FlatBufferBuilder builder, EPacketProtocol messageid) { builder.AddInt(2, (int)messageid, 10103); }
  public static Offset<SCEnterGameAck> EndSCEnterGameAck(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCEnterGameAck>(o);
  }
  public SCEnterGameAckT UnPack() {
    var _o = new SCEnterGameAckT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SCEnterGameAckT _o) {
    _o.AccountID = this.AccountID;
    _o.AccountPW = this.AccountPW;
    _o.Messageid = this.Messageid;
  }
  public static Offset<SCEnterGameAck> Pack(FlatBufferBuilder builder, SCEnterGameAckT _o) {
    if (_o == null) return default(Offset<SCEnterGameAck>);
    var _AccountID = _o.AccountID == null ? default(StringOffset) : builder.CreateString(_o.AccountID);
    var _AccountPW = _o.AccountPW == null ? default(StringOffset) : builder.CreateString(_o.AccountPW);
    return CreateSCEnterGameAck(
      builder,
      _AccountID,
      _AccountPW,
      _o.Messageid);
  }
};

public class SCEnterGameAckT
{
  public string AccountID { get; set; }
  public string AccountPW { get; set; }
  public EPacketProtocol Messageid { get; set; }

  public SCEnterGameAckT() {
    this.AccountID = null;
    this.AccountPW = null;
    this.Messageid = EPacketProtocol.SC_EnterGameAck;
  }
}

