// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct SCAddSyncData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SCAddSyncData GetRootAsSCAddSyncData(ByteBuffer _bb) { return GetRootAsSCAddSyncData(_bb, new SCAddSyncData()); }
  public static SCAddSyncData GetRootAsSCAddSyncData(ByteBuffer _bb, SCAddSyncData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SCAddSyncData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ServerSeqID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ObjectType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ObjectState { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(10); }
  public int HP { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxHP { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Mana { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxMana { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<SCAddSyncData> CreateSCAddSyncData(FlatBufferBuilder builder,
      int ServerSeqID = 0,
      int ObjectType = 0,
      int ObjectState = 0,
      StringOffset NameOffset = default(StringOffset),
      int HP = 0,
      int MaxHP = 0,
      int Mana = 0,
      int MaxMana = 0) {
    builder.StartTable(8);
    SCAddSyncData.AddMaxMana(builder, MaxMana);
    SCAddSyncData.AddMana(builder, Mana);
    SCAddSyncData.AddMaxHP(builder, MaxHP);
    SCAddSyncData.AddHP(builder, HP);
    SCAddSyncData.AddName(builder, NameOffset);
    SCAddSyncData.AddObjectState(builder, ObjectState);
    SCAddSyncData.AddObjectType(builder, ObjectType);
    SCAddSyncData.AddServerSeqID(builder, ServerSeqID);
    return SCAddSyncData.EndSCAddSyncData(builder);
  }

  public static void StartSCAddSyncData(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddServerSeqID(FlatBufferBuilder builder, int ServerSeqID) { builder.AddInt(0, ServerSeqID, 0); }
  public static void AddObjectType(FlatBufferBuilder builder, int ObjectType) { builder.AddInt(1, ObjectType, 0); }
  public static void AddObjectState(FlatBufferBuilder builder, int ObjectState) { builder.AddInt(2, ObjectState, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(3, NameOffset.Value, 0); }
  public static void AddHP(FlatBufferBuilder builder, int HP) { builder.AddInt(4, HP, 0); }
  public static void AddMaxHP(FlatBufferBuilder builder, int MaxHP) { builder.AddInt(5, MaxHP, 0); }
  public static void AddMana(FlatBufferBuilder builder, int Mana) { builder.AddInt(6, Mana, 0); }
  public static void AddMaxMana(FlatBufferBuilder builder, int MaxMana) { builder.AddInt(7, MaxMana, 0); }
  public static Offset<SCAddSyncData> EndSCAddSyncData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCAddSyncData>(o);
  }
  public SCAddSyncDataT UnPack() {
    var _o = new SCAddSyncDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SCAddSyncDataT _o) {
    _o.ServerSeqID = this.ServerSeqID;
    _o.ObjectType = this.ObjectType;
    _o.ObjectState = this.ObjectState;
    _o.Name = this.Name;
    _o.HP = this.HP;
    _o.MaxHP = this.MaxHP;
    _o.Mana = this.Mana;
    _o.MaxMana = this.MaxMana;
  }
  public static Offset<SCAddSyncData> Pack(FlatBufferBuilder builder, SCAddSyncDataT _o) {
    if (_o == null) return default(Offset<SCAddSyncData>);
    var _Name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateSCAddSyncData(
      builder,
      _o.ServerSeqID,
      _o.ObjectType,
      _o.ObjectState,
      _Name,
      _o.HP,
      _o.MaxHP,
      _o.Mana,
      _o.MaxMana);
  }
};

public class SCAddSyncDataT
{
  public int ServerSeqID { get; set; }
  public int ObjectType { get; set; }
  public int ObjectState { get; set; }
  public string Name { get; set; }
  public int HP { get; set; }
  public int MaxHP { get; set; }
  public int Mana { get; set; }
  public int MaxMana { get; set; }

  public SCAddSyncDataT() {
    this.ServerSeqID = 0;
    this.ObjectType = 0;
    this.ObjectState = 0;
    this.Name = null;
    this.HP = 0;
    this.MaxHP = 0;
    this.Mana = 0;
    this.MaxMana = 0;
  }
}

